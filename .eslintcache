[{"/home/willduiker/code/haypenny/frontend/haypenny/src/index.js":"1","/home/willduiker/code/haypenny/frontend/haypenny/src/reportWebVitals.js":"2","/home/willduiker/code/haypenny/frontend/haypenny/src/App.js":"3","/home/willduiker/code/haypenny/frontend/haypenny/src/Constants/URL.js":"4","/home/willduiker/code/haypenny/frontend/haypenny/src/Components/Login.js":"5","/home/willduiker/code/haypenny/frontend/haypenny/src/Components/OpinionContainer.js":"6","/home/willduiker/code/haypenny/frontend/haypenny/src/Components/NavBar.js":"7","/home/willduiker/code/haypenny/frontend/haypenny/src/Components/Topic.js":"8","/home/willduiker/code/haypenny/frontend/haypenny/src/Components/OpinionForm.js":"9","/home/willduiker/code/haypenny/frontend/haypenny/src/Components/Opinion.js":"10","/home/willduiker/code/haypenny/frontend/haypenny/src/Components/TopicForm.js":"11"},{"size":500,"mtime":1607538178510,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607538178524,"results":"14","hashOfConfig":"13"},{"size":2446,"mtime":1607731450617,"results":"15","hashOfConfig":"13"},{"size":105,"mtime":1607733411500,"results":"16","hashOfConfig":"13"},{"size":6958,"mtime":1607718052645,"results":"17","hashOfConfig":"13"},{"size":3801,"mtime":1607722799790,"results":"18","hashOfConfig":"13"},{"size":893,"mtime":1607551115562,"results":"19","hashOfConfig":"13"},{"size":1429,"mtime":1607625788666,"results":"20","hashOfConfig":"13"},{"size":1996,"mtime":1607705789637,"results":"21","hashOfConfig":"13"},{"size":5778,"mtime":1607718086933,"results":"22","hashOfConfig":"13"},{"size":2879,"mtime":1607722947055,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"7csxf4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/willduiker/code/haypenny/frontend/haypenny/src/index.js",[],["51","52"],"/home/willduiker/code/haypenny/frontend/haypenny/src/reportWebVitals.js",[],"/home/willduiker/code/haypenny/frontend/haypenny/src/App.js",[],"/home/willduiker/code/haypenny/frontend/haypenny/src/Constants/URL.js",["53"],"/home/willduiker/code/haypenny/frontend/haypenny/src/Components/Login.js",[],"/home/willduiker/code/haypenny/frontend/haypenny/src/Components/OpinionContainer.js",["54","55"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport URLIS from \"../Constants/URL\";\nimport Opinion from \"./Opinion\";\nimport Topic from \"./Topic\";\nimport TopicForm from \"./TopicForm\";\n\nclass OpinionContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredOpinions: [],\n      filteredTopics: [],\n      opinionSearch: \"\",\n      topicSearch: \"\",\n      showOpinions: true,\n      opinionPage: 1,\n      topicPage: 1,\n      lastOpinionPage: false,\n      lastTopicPage: true,\n    };\n  }\n  componentDidMount() {\n    fetch(URLIS + `/opinion/feed/new/${this.state.opinionPage}`)\n      .then((resp) => resp.json())\n      .then((message) => {\n        console.log(message);\n        this.setState({\n          filteredOpinions: message.opinions,\n        });\n      });\n    fetch(URLIS + \"/topic\")\n      .then((resp) => resp.json())\n      .then((message) => {\n        console.log(message);\n        this.setState({\n          filteredTopics: message.topics,\n        });\n      });\n  }\n  handleSearchSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"search feature\");\n  };\n  handleChange = (e) => {\n    switch (e.target.name) {\n      case \"opinion_search\":\n        this.setState({\n          opinionSearch: e.target.value,\n        });\n      case \"topic_search\":\n        this.setState({\n          topicSearch: e.target.value,\n        });\n    }\n  };\n  renderOpinions() {\n    return this.state.filteredOpinions.map((opinion) => {\n      return <Opinion opinion={opinion} />;\n    });\n  }\n  renderTopics() {\n    return this.state.filteredTopics.map((topic) => {\n      return <Topic topic={topic} />;\n    });\n  }\n\n  swap() {\n    let newTruth = this.state.showOpinions;\n    this.setState({\n      showOpinions: !newTruth,\n    });\n  }\n\n  holdOpinions() {\n    return (\n      <React.Fragment>\n        <form onSubmit={(e) => this.handleSearchSubmit(e)}>\n          <button className=\"btn\">New</button>\n          <button className=\"btn\">Popular</button>\n          <button className=\"btn\">Weird</button>\n          <input\n            type=\"text\"\n            placeholder=\"search opinions\"\n            name=\"opinion_search\"\n            value={this.state.opinionSearch}\n            onChange={(e) => this.handleChange(e)}\n          />\n          <input type=\"submit\" value=\"Search\" />\n        </form>\n        <div className=\"card\">{this.renderOpinions()}</div>\n        <div className=\"card\">\n          <h3>\n            {this.state.lastOpinionPage\n              ? `You've seen every opinion ever had. Do you feel enlightened yet?`\n              : null}\n          </h3>\n        </div>\n      </React.Fragment>\n    );\n  }\n  holdTopics() {\n    return (\n      <React.Fragment>\n        <form>\n          <button className=\"btn\">New</button>\n          <button className=\"btn\">Popular</button>\n          <button className=\"btn\">Weird</button>\n        </form>\n        <div>\n          <TopicForm />\n        </div>\n        <div className=\"card\">{this.renderTopics()}</div>\n        <div className=\"card\">\n          <h2>Topics? What Topics?</h2>\n          <h3>There is nothing of interest left to talk about.</h3>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <button className=\"btn btn-primary\" onClick={() => this.swap()}>\n          {this.state.showOpinions ? \"Show Topics\" : \"Show Opinions\"}\n        </button>\n        {this.state.showOpinions ? this.holdOpinions() : this.holdTopics()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { user: state.user };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (user) => dispatch({ type: \"LOGIN\", user: user }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpinionContainer);\n","/home/willduiker/code/haypenny/frontend/haypenny/src/Components/NavBar.js",["56"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport URLIS from \"../Constants/URL\";\n\nclass NavBar extends Component {\n\n    renderLogin() {\n        return (\n            <button class=\"btn-primary\" onClick={() => this.props.changePopUp()}>Log In</button>\n        )\n    }\n    renderProfile() {\n        return (\n            <div>{this.props.user.name}</div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.user.name !== \"\" ? this.renderProfile()\n                : this.renderLogin() }\n            </div>\n\n        )\n    }\n\n    \n}\n\nconst mapStateToProps = (state) => {\n    return { user: state.user };\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      login: (user) => dispatch({ type: \"LOGIN\", user: user }),\n    };\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(NavBar);","/home/willduiker/code/haypenny/frontend/haypenny/src/Components/Topic.js",["57"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport OpinionForm from \"./OpinionForm\";\nimport URLIS from \"../Constants/URL\";\n\nclass Topic extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForm: false,\n    };\n  }\n  swapForm() {\n    let newShowForm = this.state.showForm;\n    this.setState({\n      showForm: !newShowForm,\n    });\n  }\n\n  renderOpinionForm() {\n    return <OpinionForm topic={this.props.topic} />;\n  }\n\n  render() {\n    return (\n      <div className=\"card\" style={{margin: '20px'}}>\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">{this.props.topic.title}</h4>\n          <div>\n            <button className=\"btn btn-primary\" style={{margin: '20px'}} onClick={() => this.swapForm()}>\n              {this.state.showForm ? \"Nevermind\" : \"Give an Opinion\"}\n            </button>\n            <button className=\"btn btn-primary\" style={{margin: '20px'}}>Scope it Out</button>\n          </div>\n          <React.Fragment>\n            {this.state.showForm ? this.renderOpinionForm() : null}\n          </React.Fragment>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { user: state.user };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (user) => dispatch({ type: \"LOGIN\", user: user }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Topic);\n","/home/willduiker/code/haypenny/frontend/haypenny/src/Components/OpinionForm.js",[],"/home/willduiker/code/haypenny/frontend/haypenny/src/Components/Opinion.js",["58"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport URLIS from \"../Constants/URL\";\nimport Overlay from \"react-bootstrap/Overlay\";\n\nclass Opinion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showReact: false,\n    };\n  }\n  parseDate() {\n    let dateArray = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let splitDate = this.props.opinion.created_at.split(\"T\")[0].split(\"-\");\n    let returnDate =\n      dateArray[parseInt(splitDate[1]) - 1] +\n      \" \" +\n      splitDate[2] +\n      \", \" +\n      splitDate[0];\n\n    return returnDate;\n  }\n  handleClick = (e) => {\n      console.log(e.target)\n      // debugger\n      let data = {user_id: this.props.user.id, opinion_id: this.props.opinion.id, type: e.target.dataset.name}\n      let reqObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }\n      fetch(URLIS + \"/reaction\",reqObj)\n      .then((resp) => resp.json())\n      .then((message) => {\n        console.log(message)\n      })\n\n\n\n  }\n  toggleReact() {\n    let newReact = this.state.showReact;\n    this.setState({\n      showReact: !newReact,\n    });\n  }\n  renderReactionsTally() {\n    let love = this.props.opinion.reactions.filter((reaction) => {\n      return reaction === \"LOVE\";\n    });\n    let laugh = this.props.opinion.reactions.filter((reaction) => {\n      return reaction === \"LAUGH\";\n    });\n    let like = this.props.opinion.reactions.filter((reaction) => {\n      return reaction === \"LIKE\";\n    });\n    let dislike = this.props.opinion.reactions.filter((reaction) => {\n      return reaction === \"DISLIKE\";\n    });\n    let angry = this.props.opinion.reactions.filter((reaction) => {\n      return reaction === \"ANGRY\";\n    });\n    let confused = this.props.opinion.reactions.filter((reaction) => {\n      return reaction === \"CONFUSED\";\n    });\n    return (\n      <div>\n        {love.length !== 0 ? <div >😍 x{love.length}</div> : null }\n        {laugh.length !== 0 ? <div >🤣 x{laugh.length}</div> : null}\n        {like.length !== 0 ? <div >😊 x{like.length}</div> : null}\n        {dislike.length !== 0 ? <div >😠 x{dislike.length}</div> : null}\n        {angry.length !== 0 ? <div >😡 x{angry.length}</div> : null}\n        {confused.length !== 0 ? <div >🤔 x{confused.length}</div> : null}\n      </div>\n    );\n  }\n\n  renderReactions() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div classname=\"container-fluid\" style={{ width: \"50%\" }}>\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <div className=\"react-emoji\" type=\"button\" data-name=\"LOVE\" value='😍' onClick={(e) => this.handleClick(e)}>😍</div>\n              </div>\n              <div className=\"col-sm\">\n                <div className=\"react-emoji\" type=\"button\" data-name='LAUGH' value='🤣'  onClick={(e) => this.handleClick(e)}>🤣</div>\n              </div>\n              <div className=\"col-sm\">\n                <div className=\"react-emoji\" type=\"button\" data-name='LIKE' value='😊' onClick={(e) => this.handleClick(e)}>😊</div>\n              </div>\n              <div className=\"col-sm\">\n                <div className=\"react-emoji\" type=\"button\" data-name='DISLIKE' value='😠' onClick={(e) => this.handleClick(e)}>😠</div>\n              </div>\n              <div className=\"col-sm\">\n                <div className=\"react-emoji\" type=\"button\" data-name='ANGRY' value='😡' onClick={(e) => this.handleClick(e)}>😡</div>\n              </div>\n              <div className=\"col-sm\">\n                <div className=\"react-emoji\" type=\"button\" data-name='CONFUSED' value='🤔' onClick={(e) => this.handleClick(e)}>🤔</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderReactButton() {\n    return (\n      <div>\n        <React.Fragment>\n          {this.state.showReact ? this.renderReactions() : null}\n        </React.Fragment>\n        <button\n          className=\"btn btn-primary\"\n          style={{ margin: \"20px\" }}\n          onClick={() => this.toggleReact()}\n        >\n          React\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"card\" style={{ margin: \"20px\" }}>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12 col-md-8\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">\n                  On the topic of {this.props.opinion.topic}\n                </h5>\n                <div>{this.props.opinion.content}</div>\n                <div>\n                  ~{this.props.opinion.user}, {this.parseDate()}\n                </div>\n                <div>\n                  {this.props.user.name !== \"\"\n                    ? this.renderReactButton()\n                    : null}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6 col-md-4\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h6 className=\"card-title\">Reactions</h6>\n                  {this.renderReactionsTally()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { user: state.user };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (user) => dispatch({ type: \"LOGIN\", user: user }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Opinion);\n","/home/willduiker/code/haypenny/frontend/haypenny/src/Components/TopicForm.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":1,"nodeType":"65","endLine":1,"endColumn":63},{"ruleId":"66","severity":1,"message":"67","line":46,"column":5,"nodeType":"68","messageId":"69","endLine":55,"endColumn":6},{"ruleId":"70","severity":1,"message":"71","line":51,"column":7,"nodeType":"72","messageId":"73","endLine":54,"endColumn":12},{"ruleId":"74","severity":1,"message":"75","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":13},{"ruleId":"74","severity":1,"message":"75","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":13},{"ruleId":"74","severity":1,"message":"78","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":15},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"import/no-anonymous-default-export","Assign literal to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-unused-vars","'URLIS' is defined but never used.","Identifier","unusedVar","'Overlay' is defined but never used.","no-global-assign","no-unsafe-negation"]